.read rating.sql

/*** 1. Titles of all movies directed by Steven Spielberg.
SELECT title FROM Movie WHERE director="Steven Spielberg";


/*** 2. All years that have a movie that received a rating of 4 or 5 sorted in increasing order.
/***Using INNER JOIN
SELECT DISTINCT year FROM Movie
INNER JOIN Rating ON Movie.mID = Rating.mID AND Rating.stars >= 4
ORDER BY year ASC;

/***Using WHERE
SELECT DISTINCT year FROM Movie, Rating 
WHERE Movie.mID = Rating.mID AND Rating.stars >= 4
ORDER BY year ASC;


/*** 3. Titles of all movies that have no ratings.
SELECT DISTINCT title FROM Movie, Rating
WHERE Movie.mID NOT IN (SELECT mID FROM Rating);


/*** 4. Names of all reviewers who have ratings with a NULL value for the date. 
/***Using INNER JOIN
SELECT DISTINCT name FROM Reviewer
INNER JOIN Rating ON Reviewer.rID = Rating.rID AND Rating.ratingDate IS NULL;

/***Using WHERE
SELECT DISTINCT name FROM Reviewer, Rating
WHERE Reviewer.rID = Rating.rID AND Rating.ratingDate IS NULL;


/*** 5. Ratings data in a more readable format with reviewer name, movie title, stars, and ratingDate respectively. 
/*** Sorted by reviewer name, movie title, and number of stars respectively. 
/***Using INNER JOIN
SELECT DISTINCT name, title, stars, ratingDate FROM Reviewer
INNER JOIN Rating ON Reviewer.rID = Rating.rID 
INNER JOIN Movie ON Movie.mID=Rating.mID
ORDER BY name, title, stars;

/***Using WHERE
SELECT DISTINCT name, title, stars, ratingDate FROM Movie, Reviewer, Rating
WHERE Reviewer.rID = Rating.rID AND Movie.mID=Rating.mID
ORDER BY name, title, stars;


/*** 6. Reviewer's name and the title of the movie for all cases where the same reviewer rated the same movie twice and 
/*** gave it a higher rating the second time, 
SELECT name, title FROM
(SELECT name, title, RA1.ratingDate AS RD1, RA2.ratingDate AS RD2 FROM Movie, Reviewer, Rating AS RA1, Rating AS RA2
WHERE Reviewer.rID = RA1.rID AND Reviewer.rID = RA2.rID AND Movie.mID=RA1.mID AND Movie.mID=RA2.mID AND RD1 < RD2 AND RA1.stars < RA2.stars
ORDER BY RA1.stars);


/***(7) Title and highest number of stars for each movie that has at least one rating sorted by title. 
/***Using INNER JOIN
SELECT title, MAX(stars) FROM Rating
INNER JOIN Reviewer ON Reviewer.rID = Rating.rID
INNER JOIN Movie ON Movie.mID=Rating.mID
GROUP BY title
ORDER BY title;

/***Using WHERE
SELECT title, max(stars) FROM Movie, Reviewer, Rating
WHERE Reviewer.rID = Rating.rID AND Movie.mID=Rating.mID
GROUP BY title
ORDER BY title;


/*** 8. Title and rating spread sorted respectively by rating spread (highest to lowest), and movie title. 
/***Using INNER JOIN
SELECT title, MAX(stars)-MIN(stars) AS range FROM Rating
INNER JOIN Reviewer ON Reviewer.rID = Rating.rID 
INNER JOIN Movie ON Movie.mID=Rating.mID
GROUP BY title
ORDER BY range DESC, title;

/***Using WHERE
SELECT title, MAX(stars)-MIN(stars) AS range FROM Movie, Reviewer, Rating
WHERE Reviewer.rID = Rating.rID AND Movie.mID=Rating.mID
GROUP BY title
ORDER BY range DESC, title;


/*** 9. Difference between the average rating of movies released before 1980 and the average rating of movies released after 1980. 
/*** (calculates the average rating for each movie, then the average of those averages for movies before and then after 1980.) 
/***Using INNER JOIN
SELECT AVG(avgstars1)-AVG(avgstars2) FROM 
(SELECT AVG(stars) AS avgstars1 FROM Rating INNER JOIN Movie ON Movie.mID=Rating.mID AND Movie.year < 1980 GROUP BY title),
(SELECT AVG(stars) AS avgstars2 FROM Rating INNER JOIN Movie ON Movie.mID=Rating.mID AND Movie.year > 1980 GROUP BY title);

/***Using WHERE
SELECT AVG(avgstars1)-AVG(avgstars2) FROM 
(SELECT AVG(stars) AS avgstars1 FROM Rating, Movie WHERE Movie.mID=Rating.mID AND Movie.year < 1980 GROUP BY title),
(SELECT AVG(stars) AS avgstars2 FROM Rating, Movie WHERE Movie.mID=Rating.mID AND Movie.year > 1980 GROUP BY title);